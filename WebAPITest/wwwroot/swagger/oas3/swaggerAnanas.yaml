openapi: 3.0.0
info:
  version: 1.0.0
  title: Ananas API
  description: Ananas API documentation

servers:
  - url: https://api.stage.ananastest.com

# security:
#   - BasicAuth: []

paths:
  /iam/api/v1/auth/token:
    post:
      # parameters:
      #   - $ref: '#/components/parameters/Origin'      
      parameters:        
        - in: header
          name: Origin
          schema:
            type: string
          required: true
      summary: Get token
      description: Get token description
      requestBody:        
        description: Optional description
        required: true
        content:        
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
            examples:            
              tokenRequest:  
                $ref: '#/components/examples/tokenRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Token'
            examples:            
              tokenRequest:  
                $ref: '#/components/examples/tokenRequest'          

      responses:
        '200':
          description: Successfully returned token
          content:
            application/json:
              schema:                                                 
                  $ref: '#/components/schemas/TokenResponse'   
              examples:            
                tokenResponse:  
                  $ref: '#/components/examples/tokenResponse'                         
        '400':          
          $ref: '#/components/responses/400Error'          
        '500':          
          $ref: '#/components/responses/500Error'          

  /product/api/v1/merchant-integration/products:
    get:
      security:
        - bearerAuth: []
      summary: Get products
      description: Get all products
      parameters:
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Search by name, SKU and EAN
        - in: query
          name: page
          schema:
            type: string
          required: false
          description: Page number
        - in: query
          name: size
          schema:
            type: string
          required: false
          description: Number of products show by page
      # requestBody:        
      #   description: Optional description
      #   required: true
      #   content:        
      #     application/json:
      #       schema:
      #         $ref: '#/components/schemas/Products'            
      #     application/xml:
      #       schema:
      #         $ref: '#/components/schemas/Products'            
                                
      responses:
        '200':
          description: Successfully returned list of products
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schemas/ProductsResponse'
              examples:            
                productsResponse: 
                  type: array 
                  $ref: '#/components/examples/productsResponse'                                           
        '400':          
          $ref: '#/components/responses/400Error'          
        '500':          
          $ref: '#/components/responses/500Error'  

  /product/api/v1/merchant-integration/import:
    post:
      security:
        - bearerAuth: []
      summary: Add or update product or list of products
      description: Add or update product
      requestBody:        
        description: Optional description
        required: true
        content:        
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsRequest'
            examples:            
              productsRequest:  
                $ref: '#/components/examples/productsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProductsRequest'
            examples:            
              productsRequest:  
                ref: '#/components/examples/productsRequest'
                                
      responses:
        '200':
          description: Successfully returned list of products
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schemas/ProductsResponse'                  
        '400':          
          $ref: '#/components/responses/400Error'          
        '500':          
          $ref: '#/components/responses/500Error'          

components:
  # securitySchemes:
  #   BasicAuth:
  #     type: http
  #     scheme: basic
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    Origin:
      in: header
      name: Origin
      # value: https://stage.ananastest.com
      schema:
        type: string
      required: false    

  examples:
    tokenRequest:
      value:
        grantType: "CLIENT_CREDENTIALS"
        clientId: "asdmgd1l2g67isfdlk"
        clientSecret: "askldjdlgkjskmbkgfmk9hi99494gh743wjkerh239jr3995932jdwja="
        scope: "public_api/full_access"
      summary: Token request example      
    tokenResponse:
      value:
        id_token: null
        access_token: "eyJraWQiOiIxREd2YmNPRkdpMkhuRXdiNUtyYXAySkc2Q0x4YkdxOHJFR1ZiYklSMU93PSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIyc3Q4c2h2bmNobjdsamNuNDhwZWs2Y21xMSIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoicHVibGljX2FwaVwvZnVsbF9hY2Nlc3MiLCJhdXRoX3RpbWUiOjE2NDE5OTczODgsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS1jZW50cmFsLTEuYW1hem9uYXdzLmNvbVwvZXUtY2VudHJhbC0xXzIxbnlOTE9XbSIsImV4cCI6MTY0MjA4Mzc4OCwiaWF0IjoxNjQxOTk3Mzg4LCJ2ZXJzaW9uIjoyLCJqdGkiOiJhNjYwOWNhZC0wNmM3LTRiZGYtOTY0Zi1mNWY4Mzk1OWI5ZTgiLCJjbGllbnRfaWQiOiIyc3Q4c2h2bmNobjdsamNuNDhwZWs2Y21xMSJ9.DokIoF3xkCfJe94ye6jSPCzbhpomQSLXM78UULH_MbBt_M16iVXWlMhnCq50OrZYO3J7oBYXg10SaodC75B7dVVC1CW2Q7S_1fKvAjbnG8K6IeRWFb3OAs285JgqCKXmUSdjrHhMCpwFZazojqF5MPyijHWk72MLAxypXTRmDrVx4aQaNyIFeDjL0O58WXqUpOyAJR7BP7EkXnUcbc0HHXaGggQpPULBmpcSsezTkQ0VnsphxH63n0ctFPpYmzBudhsXejgytk7bLDtVMaBh_6suwV80ZKljpokggBUqxosWoHKmzJ5dYDs-Ecmbkhuo8zOJI9oRamtW2jXRnOxLaQx3A"
        refresh_token: null
        expires_in: 86400
        token_type: "Bearer"
      summary: Token response example
    productsResponse:
      value:
        id: 1769761
        externalId: null
        ean: "194512452102"
        name: "UNDER ARMOUR UA HOVR Summit Mid"
        description: "Pokažite svoju autentičnost u Under Armour UA HOVR Summit Mid patikama"
        brand: "{\"id\":1600,\"name\":\"UNDER ARMOUR\"}"          
        sku: "194512452102"
        productType: "Sportske Patike"
        categories: ["Muške patike", "Sportska oprema"]
        basePrice: 5000
        vat: 10.00
        stockLevel: 20
        packageWeightValue: 0.3
        packageWeightUnit: "kg"
      summary: Products response example
    productsRequest:
      value:
        name: "Samsung Pametni telefon Galaxy SM-A325F plavi"
        description: "Samsung Galaxy SM-A325F. Dijagonala monitora: 16,3 cm..."
        coverImage: "https://ananas.rs/_next/image?url=https%3A%2F%2Fstatic.ananas.rs%2Ftmp%2Fimage-thumbnails%2FProduct_Images%2FSmartphones%2Fsamsung_galaxy_sm_a325f_16_3_cm_6_4_dve_sim_kartice_4g_usb_tipa_c_4_gb_128_gb_5000_mah_plavo%2Fimage-thumb__295826__product_thumbnail%2F951c5c5b9fdddc72.jpeg&w=3200&q=75" 
        ean: "9788644105886"
        brand: "Samsung"
        gallery: ["https://ananas.rs/_next/image?url=https%3A%2F%2Fstatic.ananas.rs%2Ftmp%2Fimage-thumbnails%2FProduct_Images%2FSmartphones%2Fsamsung_galaxy_sm_a325f_16_3_cm_6_4_dve_sim_kartice_4g_usb_tipa_c_4_gb_128_gb_5000_mah_plavo%2Fimage-thumb__295826__product_thumbnail%2F951c5c5b9fdddc72.jpeg&w=3200&q=75"]
        parentEan: ""
        packageWeightValue: 184
        packageWeightUnit: "KG"
        basePrice: 40000
        vat: 20.00
        stockLevel: 5
        sku: "LXG9HET6O3"
        externalId: "1"
        productType: "Telefon"
        category: "SMART mobilni telefoni"
        attributes: [ Boja: ["Plava"], Sirina: ["73.6mm"], Dubina: ["8.4mm"]]

  schemas:
    Token:
      type: object
      properties:
        grantType:
          type: string
          description: Always "CLIENT_CREDENTIALS"
        clientId:
          type: string
          description: client Id received from merchant portal
        clientSecret:
          type: string
          description: client secret received from merchant portal
        scope:
          type: string
          description: Always "public_api/full_access"

    # ProductsRequest:
    #   type: object
    #   properties:
    #     id:
    #       type: integer
    #       description: Product id
    #     externalId:
    #       type: integer
    #       description: External id
    #     ean:
    #       type: string
    #       description: Ean code
    #     sku:
    #       type: string
    #       description: SKU
    #     productName:
    #       type: string
    #       description: Product name
    #     packageWeightValue:
    #       type: number
    #       description: Package weight value
    #     packageWeightUnit:
    #       # type: string
    #       # description: Package weight unit
    #       enum:
    #         - 'kg'
    #         - 'g'
    #       default: 'kg'
    #     basePrice:
    #       type: number
    #       description: Base price
    #     stockLevel:
    #       type: number
    #       description: Stock level
    #     vat:
    #       type: number
    #       description: VAT

    ProductsRequest:
      type: object
      properties:
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description 
        coverImage:
          type: string
          description: Product cover image
        ean:
          type: string
          description: Europian Article Number
        brand:
          type: string
          description: Product brand
        gallery:
          type: array
          description: Product images
          items:
            type: string
        parentEan:
          type: string
          description: The product will be a variation of the product to which the EAN is entered        
        packageWeightValue:
          type: number
          description: Package weight value
        packageWeightUnit:
          # type: string
          description: Package weight unit
          enum:
            - 'KG'
            - 'G'
          default: 'KG'
        basePrice:
          type: number
          description: Product price with VAT included        
        vat:
          type: number
          description: Product VAT
        stockLevel:
          type: integer
          description: Stock level
        sku:
          type: string
          description: Stock keeping unit
        externalId:
          type: string
          description: Unique product identifier on merchant side
        productType:
          type: string
          description: Type of product
        category:
          type: string
          description: Main category where product belongs
        attributes:
          type: array
          description: Attributes of product like color, size, material type, type of RAM, etc.
          items:
            type: object
            additionalProperties:
              type: array
              items:
                type: string    

          
    TokenResponse:
      type: object
      properties:
        id_token:
          type: integer
          description: Always null
        access_token:
          type: string
          description: Access token
        refresh_token:
          type: string
          description: Not available
        expires_in:
          type: integer
          description: Time in seconds when token will expire
        token_type:
          type: string
          description: Always Bearer

    ProductsResponse:
      type: object
      properties:
        id:
          type: integer
          description: Product unique identifier
        externalId:
          type: string
          description: Unique product identifier on merchant side
        ean:
          type: string
          description: European Article Number
        name:
          type: string
          description: Product name
        description:
          type: string
          description: Product description
        brand:
          type: string
          description: Product Brand
        sku:
          type: string
          description: Stock keeping unit (SKU)
        productType:
          type: string
          description: Type of product
        categories:
          type: array
          description: List of categories where product belongs
          items:
            type: string
        basePrice:
          type: number
          description: Product price with VAT included
        vat:
          type: number
          description: Product VAT
        stockLevel:
          type: number
          description: Product available stock level
        packageWeightValue:
          type: number
          description: Package weight of product
        packageWeightUnit:
          type: string
          description: Product weight package unit
        
  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object 
            properties:
              message:
                type: string
    500Error:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object 
            properties:
              message:
                type: string
  
